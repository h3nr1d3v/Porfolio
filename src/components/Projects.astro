---
import { Icon } from "astro-icon";

const projects = [
  {
    id: 1,
    title: "hypr-dot",
    description:
      "A highly customized Arch Linux environment featuring Hyprland as the window manager, with dynamic color schemes that adapt to your wallpaper.",
    technologies: ["Linux", "Lua", "Bash"],
    image: "/images/hypr-dot.svg",
    github: "https://github.com/h3nr1d3v/hypr-dot",
    category: "Linux",
  },
  {
    id: 2,
    title: "SkirkBOT",
    description: "A Discord bot for server management and fun interactions.",
    technologies: ["Python", "Discord.py"],
    image: "/images/SKIRK-BOT.svg",
    github: "https://github.com/h3nr1d3v/Skirk",
    category: "Python",
  },
  {
    id: 3,
    title: "dotfiles",
    description:
      "My personal dotfiles for Arch Linux, including configurations for various applications and utilities.",
    technologies: ["Linux", "Bash"],
    image: "/images/dotfiles.png",
    github: "#",
    category: "Linux",
  },
  {
    id: 4,
    title: "Portfolio",
    description:
      "A simple and elegant portfolio template built with Astro and Tailwind CSS.",
    technologies: ["Astro", "Tailwind CSS"],
    image: "/images/portfolio.png",
    github: "#",
    category: "Other",
  },
];

const categories = [
  { name: "All", icon: "fas fa-globe" },
  { name: "Linux", icon: "fab fa-linux" },
  { name: "Python", icon: "fab fa-python" },
  { name: "Bash", icon: "fas fa-terminal" },
  { name: "Lua", icon: "fas fa-moon" },
  { name: "CSS", icon: "fab fa-css3" },
  { name: "MySQL", icon: "fas fa-database" },
  { name: "Other", icon: "fas fa-code" },
];
---

<section id="projects" class="w-full py-20">
  <div class="space-y-8">
    <div class="text-center mb-12 animate-slide-up">
      <div class="flex items-center justify-center gap-3 mb-4">
        <i
          class="fas fa-code-branch text-4xl text-light-accent dark:text-dark-accent"
        ></i>
        <h2
          class="text-3xl md:text-4xl font-bold text-light-accent dark:text-dark-accent"
        >
          Projects
        </h2>
      </div>
      <p
        class="text-xl md:text-2xl text-light-tertiary dark:text-dark-tertiary"
      >
        Everything you can <span class="text-light-accent dark:text-dark-accent"
          >imagine</span
        >, you can <span class="text-light-accent dark:text-dark-accent"
          >program</span
        >
      </p>
    </div>

    <div
      class="flex flex-wrap justify-center gap-4 mb-12 animate-slide-up"
      style="animation-delay: 200ms;"
    >
      {
        categories.map((category) => (
          <button
            data-category={category.name}
            class="category-btn px-4 py-2 rounded-full text-sm md:text-base flex items-center gap-2 transition-all duration-300 hover:bg-light-tertiary hover:text-light-primary dark:hover:bg-dark-tertiary dark:hover:text-dark-primary hover:scale-105 bg-light-secondary dark:bg-dark-secondary text-light-accent dark:text-dark-accent shadow-md"
          >
            <i class={category.icon} aria-hidden="true" />
            {category.name}
          </button>
        ))
      }
    </div>

    <div class="relative overflow-hidden" style="min-height: 400px;">
      <div
        id="projects-slider"
        class="flex transition-transform duration-500 cursor-pointer"
      >
        {
          projects.map((project) => (
            <div
              data-category={project.category}
              data-technologies={project.technologies.join(",")}
              class="project-slide w-full flex-shrink-0 bg-light-secondary dark:bg-dark-secondary rounded-xl overflow-hidden shadow-lg"
            >
              <div class="flex flex-col md:flex-row">
                <div class="md:w-1/2 p-6 flex flex-col justify-between">
                  <div>
                    <h3 class="text-2xl font-semibold mb-3 text-light-accent dark:text-dark-accent">
                      {project.title}
                    </h3>
                    <p class="text-base md:text-lg mb-4 text-light-tertiary dark:text-dark-tertiary">
                      {project.description}
                    </p>
                    <div class="flex flex-wrap gap-2 mb-4">
                      {project.technologies.map((tech) => (
                        <span class="px-3 py-1 text-sm md:text-base rounded-full bg-light-primary dark:bg-dark-primary text-light-accent dark:text-dark-accent">
                          {tech}
                        </span>
                      ))}
                    </div>
                  </div>
                  <a
                    href={project.github}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="text-light-accent dark:text-dark-accent hover:text-light-tertiary dark:hover:text-dark-tertiary transition-colors flex items-center gap-2 text-lg mt-4"
                  >
                    <i class="fab fa-github" aria-hidden="true" />
                    <span>View on GitHub</span>
                  </a>
                </div>
                <div class="md:w-1/2">
                  <img
                    src={project.image}
                    alt={`Screenshot of ${project.title}`}
                    class="w-full h-full object-cover"
                  />
                </div>
              </div>
            </div>
          ))
        }
      </div>

      <div class="absolute bottom-4 left-0 right-0 flex justify-center gap-2">
        {
          projects.map((_, index) => (
            <button
              class="dot w-3 h-3 rounded-full bg-light-tertiary dark:bg-dark-tertiary hover:bg-light-accent dark:hover:bg-dark-accent transition-colors"
              data-index={index}
              aria-label={`Go to slide ${index + 1}`}
            />
          ))
        }
      </div>
    </div>
  </div>
</section>

<style>
  .project-slide {
    transform: translateX(0);
    opacity: 1;
    transition: all 0.5s ease;
  }

  #projects-slider {
    display: flex;
    transition: transform 0.5s ease;
  }

  .dot.active {
    @apply bg-light-accent dark:bg-dark-accent;
  }

  .category-btn.active {
    @apply bg-light-accent dark:bg-dark-accent text-light-primary dark:text-dark-primary transform scale-105;
  }
</style>

<script>
  let currentSlide = 0;
  let visibleSlides = [];
  let isPaused = false;
  let autoplayInterval;
  const slider = document.getElementById("projects-slider");
  const slides = document.querySelectorAll(".project-slide");

  function updateSlider() {
    if (slider && visibleSlides.length > 0) {
      slider.style.transform = `translateX(-${currentSlide * 100}%)`;
      updateDots();
    }
  }

  function updateDots() {
    document.querySelectorAll(".dot").forEach((dot, index) => {
      dot.classList.toggle("active", index === currentSlide);
    });
  }

  function nextSlide() {
    if (visibleSlides.length > 0 && !isPaused) {
      currentSlide = (currentSlide + 1) % visibleSlides.length;
      updateSlider();
    }
  }

  function goToSlide(index) {
    if (index >= 0 && index < visibleSlides.length) {
      currentSlide = index;
      updateSlider();
    }
  }

  function startAutoplay() {
    if (!autoplayInterval) {
      autoplayInterval = setInterval(nextSlide, 5000);
    }
  }

  function stopAutoplay() {
    if (autoplayInterval) {
      clearInterval(autoplayInterval);
      autoplayInterval = null;
    }
  }

  function togglePause() {
    isPaused = !isPaused;
    if (isPaused) {
      stopAutoplay();
    } else {
      startAutoplay();
    }
  }

  function updateCategoryButtons(activeCategory) {
    document.querySelectorAll(".category-btn").forEach((button) => {
      const category = button.getAttribute("data-category");
      button.classList.toggle("active", category === activeCategory);
    });
  }

  function filterProjects(category) {
    const projects = document.querySelectorAll(".project-slide");
    visibleSlides = [];
    currentSlide = 0;

    updateCategoryButtons(category);

    projects.forEach((project, index) => {
      const projectCategory = project.getAttribute("data-category");
      const technologies =
        project.getAttribute("data-technologies")?.split(",") || [];
      const shouldShow =
        category === "All" ||
        projectCategory === category ||
        technologies.includes(category);

      project.style.display = shouldShow ? "block" : "none";
      if (shouldShow) {
        visibleSlides.push(index);
      }
    });

    document.querySelectorAll(".dot").forEach((dot, index) => {
      dot.style.display = visibleSlides.includes(index) ? "block" : "none";
    });

    updateSlider();
  }

  document.addEventListener("astro:page-load", () => {
    visibleSlides = Array.from(slides).map((_, index) => index);

    document.querySelectorAll(".dot").forEach((dot, index) => {
      dot.addEventListener("click", () => {
        goToSlide(index);
      });
    });

    slider.addEventListener("click", (e) => {
      if (!e.target.closest("a")) {
        togglePause();
      }
    });

    document.querySelectorAll("[data-category]").forEach((button) => {
      button.addEventListener("click", (e) => {
        const category = e.currentTarget.getAttribute("data-category");
        if (category) {
          filterProjects(category);
        }
      });
    });

    updateCategoryButtons("All");
    startAutoplay();
    updateDots();
  });
</script>
